21:5 PM Tuesday, March 06, 2018-03-06
Possible things to go off of:
4.) area of town. Generated by first numbers of address
5.) To display the current data on the website in one place nicely
	I think this could be a kind of sub query. A query for a pop up window when you click on the name of an organization
6.) idk maybe a query to select organizations for either:
	woman
	men
	families
	youth
	
4.)
	So as far as I can see there is no address field. We have coordinates though, and its not too difficult of math to see if a given point is inside a given rectangle. So we could map out a rectangle, or polygon, for each area, take the points of those triangles, then write a mysql function to pass a point into it and return the area. I'm not quite sure how to do this though, but I think its possible. 
	The hardest part of this query would be simply getting the coordinates of the edges of each area of kelowna.

	I tried searching and honestly all we would need is a map that has each area imposed on it and we could even just grab rough boundary coordinates, but every map I could find didnt have the actual area boundaries on the map. So that sucks. 

	http://www.arcgis.com/home/webmap/viewer.html?panel=gallery&suggestField=true&url=http%3A%2F%2Fgeo.kelowna.ca%2Farcgis%2Frest%2Fservices%2FOpenData%2FMapServer%2F38
	The problem is that the polygonal shape of the sectors of kelowna are not convex. So the algorithm to test if a point is inside of a an area i much more difficult. 

	Okay there is a way I could do it but it involves a lot of work and implementing being able to run C functions from inside of a mysql function

5.)

		
		
	SELECT title, description, building_type, contact_email, contact_name, 
		services_provided,
		demographic_served, gender_served, primary_target_resident,
		SPECIAL_attributes
	FROM isearch
	WHERE id = "the selected organization";
	
	So the idea is that this query should only be returning one row. 
	I think the output should be a vertical list. The list can be broken into categories.
	Something that would look like this:
	
		title
		description
		building type
		contact info
		...
		
		services provided:
			services provided
			...
		
		demographic served
			gender, age, individual/family
			...
			
		special attributes
			list all boolean categories.
			but only list them if the value is true.
			...
			
	For the special attributes section I think that the best thing to do would be to check if the value is TRUE for the column, and if it is to have the name of the column in the list. This way we can check all desired boolean columns and the result wont be too cluttered. 
	There is a list of boolean columns in:
		Project_Repo\COSC224_Project\JJ\20180220 categorizing columns.txt
		
	Instead of making this query a selectable query from the sidebar, I think it could be used as a pop up info window when someone clicks on a organizations name from any of the other queries. 
	
6.)
	This one is a bit tricky because there is a few ways we could implement this. For now I think try to think of any way then later we can change it if we want to.
	There are three columns we are looking at for this:
		- Demographic_Served (age)			
		- Gender_Served (gender)
		- Primary_Target_Resident (individual/family/couple)
		
	I am thinking that we can have a filter section about the output to select more specifically among those three columns. 
	I think the default query could just all of them sorted by whatever. 
	I'm not sure if we have done this yet, but it could be really effective in this query to have the ability to sort by columns.
	Hmm we could also divide the gender and primary_target_resident columns into separate columns. That could make things more readable I think.
	There are three possible values for gender:
		- male
		- female
		- transgender
	There are three values for primary_target_residence
		- individual
		- couple
		- family
	I think that we could make three columns out of each of those columns, one for each possible value. 
	That way we will have 7 columns in this query.
	
	SELECT title, if(gender_served LIKE '%\"male\"%', 'yes', '') male, if(gender_served LIKE '%\"female\"%', 'yes', '') female,
		if(gender_served LIKE '%\"transgender\"%', 'yes', '') transgender, if(primary_target_resident LIKE '%\"individual\"%', 'yes', '') individual,
		if(primary_target_resident LIKE '%\"couple\"%', 'yes', '') couple, if(primary_target_resident LIKE '%\"family\"%', 'yes', '') family 
	FROM isearch
	WHERE (generated from filter selections. None by default I think)
	ORDER BY (should be able to be change by user clicks. Default can be anything)
	
	I have tested this and it works for me. I have escaped the double quote character so that female wouldnt be return when looking for '%male%'.
	These seems like a useful and good query. 
	My only worry is that this table output might not be the best readable format, but I am not sure what it could be replaced with or how. That is something for us to think about.
	
	
		
	
